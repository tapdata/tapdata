{
  "properties": {
    "name": "Zoho-Desk",
    "icon": "icons/zoho.png",
    "doc" : "${doc}",
    "id": "zoho-desk",
    "authentication": "Beta",
    "tags": ["SaaS"]
  },
  "configOptions": {
    "pdkExpansion": [],
    "node": {
      "type": "object",
      "properties": {
      }
    },
    "connection": {
      "type": "object",
      "properties": {
        "orgId": {
          "type": "String",
          "title": "${orgId}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "apiServerKey": "database_host",
          "x-index": 10,
          "required": true
        },
        "clientID": {
          "type": "String",
          "title": "${clientID}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "apiServerKey": "database_host",
          "x-index": 20,
          "required": true
        },
        "clientSecret": {
          "type": "String",
          "title": "${clientSecret}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "apiServerKey": "database_host",
          "x-index": 30,
          "required": true
        },
        "generateCode": {
          "type": "String",
          "title": "${generateCode}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "apiServerKey": "database_host",
          "x-index": 40,
          "required": true,
          "x-reactions": {
            "dependencies": ["clientID","clientSecret"],
            "fulfill": {
              "state": {
                "display": "{{$deps[0]&&$deps[1] ? \"visible\" : \"hidden\"}}"
              }
            }
          }
        },
        "getTokenButton": {
          "type": "void",
          "title": "${tokenButton}",
          "x-decorator": "FormItem",
          "extra": true,
          "x-component-props": {
            "onClick": "{{useAsyncDataSourceByConfig({service: getCommandAndSetValue, withoutField: true}, $form, { command: 'TokenCommand' })}}"
          },
          "x-reactions": [{
            "dependencies": ["generateCode"],
            "fulfill": {
              "state": {
                "display": "{{$deps[0] ? \"visible\" : \"hidden\"}}"
              }
            }
          },{
            "dependencies": ["refreshToken"],
            "fulfill": {
              "state": {
                "content": "{{$deps[0] ? \"${getTokenButtonMsgA}\" : \"${getTokenButtonMsgB}\"}}"
              }
            }
          }],
          "x-content": "${hookButton}",
          "x-component": "Button",
          "x-index": 41
        },
        "getTokenMsg": {
          "type": "String",
          "title": " ",
          "x-decorator": "FormItem",
          "x-decorator-props": {
            "colon": false
          },
          "x-component": "PreviewText.Input",
          "x-component-props": {
            "content": "{{$self.value || \"-\"}}"
          },
          "x-reactions": [{
            "dependencies": ["generateCode"],
            "fulfill": {
              "state": {
                "display": "{{$deps[0]&&$self.value ? \"visible\" : \"hidden\"}}"
              }
            }
          }],
          "x-index": 42
        },
        "getRefreshTokenButton": {
          "type": "void",
          "title": "${accessTokenButton}",
          "x-decorator": "FormItem",
          "x-component-props": {
            "onClick": "{{useAsyncDataSourceByConfig({service: getCommandAndSetValue, withoutField: true}, $form, { command: 'RefreshTokenCommand' })}}"
          },
          "x-reactions": [{
            "dependencies": ["refreshToken"],
            "fulfill": {
              "state": {
                "visible": "{{isEdit}}"
              }
            }
          }],
          "x-content": "${refreshTokenButtonMsg}",
          "x-component": "Button",
          "x-index": 43
        },
        "getRefreshMsg": {
          "type": "String",
          "title": " ",
          "x-decorator": "FormItem",
          "x-decorator-props": {
            "colon": false
          },
          "x-component": "PreviewText.Input",
          "x-component-props": {
            "content": "{{$self.value || \"-\"}}"
          },
          "x-reactions": [{
            "dependencies": ["refreshToken"],
            "fulfill": {
              "state": {
                "display": "{{$deps[0]&&$self.value ? \"visible\" : \"hidden\"}}"
              }
            }
          }],
          "x-index": 44
        },
        "refreshToken": {
          "type": "String",
          "title": "${refreshToken}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "x-component-props": {
            "readOnly": true
          },
          "apiServerKey": "database_host",
          "x-index": 50,
          "x-display": "hidden"
        },
        "accessToken": {
          "type": "String",
          "title": "${accessToken}",
          "x-decorator": "FormItem",
          "x-component": "Input",
          "x-component-props": {
            "readOnly": true
          },
          "apiServerKey": "database_host",
          "x-index": 60,
          "x-display": "hidden"
        },
        "connectionMode": {
          "type": "String",
          "default": "DocumentMode",
          "title": "${connectionMode}",
          "x-decorator": "FormItem",
          "x-component": "Select",
          "enum": [
            {
              "label": "${document}",
              "value": "DocumentMode"
            }
          ],
          "x-index": 80,
          "required": false
        },
        "streamReadType": {
          "type": "String",
          "default": "WebHook",
          "title": "${streamReadType}",
          "x-decorator": "FormItem",
          "x-component": "Select",
          "enum": [
            {
              "label": "${webHookRead}",
              "value": "WebHook"
            }
          ],
          "x-index": 90,
          "required": false
        },
        "hookButton": {
          "type": "void",
          "title": " ",
          "x-decorator": "FormItem",
          "x-component-props": {
            "onClick": "{{useAsyncDataSourceByConfig({service: getToken, withoutField: true}, {name:'hookText'}, $values, $form)}}"
          },
          "x-reactions": {
            "dependencies": ["streamReadType"],
            "fulfill": {
              "state": {
                "display": "{{$deps[0] === \"WebHook\" ? \"visible\" : \"hidden\"}}"
              }
            }
          },
          "x-content": "${hookButton}",
          "x-component": "Button",
          "x-index": 100
        },
        "hookText": {
          "type": "string",
          "title": "${hookButtonTitle}",
          "x-decorator": "FormItem",
          "x-decorator-props": {
            "colon": false
          },
          "x-reactions": {
            "dependencies": ["streamReadType"],
            "fulfill": {
              "state": {
                "display": "{{$deps[0] === \"WebHook\" ? \"visible\" : \"hidden\"}}"
              }
            }
          },
          "x-component": "Input",
          "x-index": 110
        }
      }
    }
  },
  "messages": {
    "default": "en_US",
    "en_US": {
      "doc": "docs/zoho_en_US.md",
      "clientID": "Client ID",
      "clientSecret": "Client Secret",
      "generateCode": "Generate Code",
      "refreshToken": "Refresh Token",
      "accessToken": "AccessToken",
      "orgId": "Organization ID",
      "webHook": "Service Hook",
      "hookButton": "Generate URL to notify",
      "hookButtonTitle": "URL to notify",
      "tokenButton": "Get access rights and tokens",
      "accessTokenButton": "Refresh token",
      "refreshTokenButtonMsg": "Refresh Now",
      "getTokenButtonMsgA": "Authorized, click to retrieve",
      "getTokenButtonMsgB": "Please click to get",

      "iterationCodes": "Iteration",
      "issueType": "Issue Type",

      "allIssueType": "All Issue",
      "defectIssue": "Defect",
      "requirementIssue": "Requirement",
      "missionIssue": "Mission",
      "epicIssue": "Epic",

      "connectionMode": "Connection mode",
      "document": "General document",
      "csv": "CSV format",

      "streamReadType": "Incremental mode",
      "webHookRead": "Web Hook",
      "pollingRead": "Polling Read",


      "df_initial_totals": "Initial data amount",
      "df_incremental_interval": "Incremental interval (ms)",
      "df_incremental_interval_totals": "Incremental Interval Upper Limits",
      "df_incremental_types": "incremental event types",
      "df_incremental_types_insert": "Insert",
      "df_incremental_types_update": "Update",
      "df_incremental_types_delete": "Delete",
      "df_write_interval": "Write Interval (ms)",
      "df_write_interval_totals": "Write Interval Upper Limit",
      "df_write_log": "Print write log",
      "df_table_name": "Table Name",
      "df_table_fields": "Field Definitions",
      "df_table_field_name": "Name",
      "df_table_field_type": "Type",
      "df_table_field_default": "Default value",
      "df_table_field_primary": "Primary Key",
      "df_table_field_operator": "Operation",
      "df_table_field_btn_add": "Add field"
    },
    "zh_CN": {
      "clientID": "客户端ID码",
      "clientSecret": "客户端机密码",
      "generateCode": "应用生成码",
      "refreshToken": "刷新令牌",
      "accessToken": "访问令牌",
      "orgId": "机构 ID",
      "webHook": "Service Hook",
      "hookButton": "生成要通知的URL",
      "hookButtonTitle": "要通知的URL",
      "tokenButton": "获取访问权限和令牌",
      "accessTokenButton": "刷新令牌",
      "refreshTokenButtonMsg": "立即刷新",
      "getTokenButtonMsgA": "已授权，点击将会重新获取",
      "getTokenButtonMsgB": "请点击获取",

      "connectionMode": "连接模式",
      "document": "普通文档格式",
      "csv": "CSV格式",

      "streamReadType": "增量方式",
      "webHookRead": "Web Hook",
      "pollingRead": "轮询式",

      "doc": "docs/zoho_zh_CN.md",
      "df_initial_totals": "初始化数据量",
      "df_incremental_interval": "增量间隔（毫秒）",
      "df_incremental_interval_totals": "增量间隔上限",
      "df_incremental_types": "增量事件类型",
      "df_incremental_types_insert": "插入",
      "df_incremental_types_update": "更新",
      "df_incremental_types_delete": "删除",
      "df_write_interval": "写入间隔(毫秒)",
      "df_write_interval_totals": "写入间隔上限",
      "df_write_log": "打印写入日志",
      "df_table_name": "表名",
      "df_table_fields": "字段定义",
      "df_table_field_name": "名称",
      "df_table_field_type": "类型",
      "df_table_field_default": "默认值",
      "df_table_field_primary": "主键",
      "df_table_field_operator": "操作",
      "df_table_field_btn_add": "增加字段"
    },
    "zh_TW": {
      "clientID": "用戶端ID碼",
      "clientSecret": "用戶端機密碼",
      "generateCode": "應用生成碼",
      "refreshToken": "重繪權杖",
      "accessToken": "訪問權杖",
      "orgId": "組織 ID",
      "webHook": "Service Hook",
      "hookButton": "生成要通知的URL",
      "hookButtonTitle": "要通知的URL",
      "tokenButton": "獲取存取權限和權杖",
      "accessTokenButton": "重繪權杖",
      "refreshTokenButtonMsg": "立即重繪",
      "getTokenButtonMsgA": "已授權，點擊將會重新獲取 ",
      "getTokenButtonMsgB": "請點擊獲取",

      "connectionMode": "連接模式",
      "document": "普通文檔格式",
      "csv": "CSV格式",

      "streamReadType": "增量方式",
      "webHookRead": "Web Hook",
      "pollingRead": "輪詢式",

      "doc": "docs/zoho_zh_TW.md",
      "df_initial_totals": "初始化數據量",
      "df_incremental_interval": "增量間隔（毫秒）",
      "df_incremental_interval_totals": "增量間隔上限",
      "df_incremental_types": "增量事件類型",
      "df_incremental_types_insert": "插入",
      "df_incremental_types_update": "更新",
      "df_incremental_types_delete": "刪除",
      "df_write_interval": "寫入間隔(毫秒)",
      "df_write_interval_totals": "寫入間隔上限",
      "df_write_log": "打印寫入日誌",
      "df_table_name": "表名",
      "df_table_fields": "字段定義",
      "df_table_field_name": "名稱",
      "df_table_field_type": "類型",
      "df_table_field_default": "默認值",
      "df_table_field_primary": "主鍵",
      "df_table_field_operator": "操作",
      "df_table_field_btn_add": "增加字段"
    }
  },
  "dataTypes": {
    "Textarea": {"to": "TapString","byte": 5000},
    "Text": {"to": "TapString","byte": 255},
    "Number": {"to": "TapNumber","value": [0,999999999]},
    "Percent": {
      "to": "TapNumber",
      "precision": [ 1, 5],
      "value": [0.0,99999.0],
      "scale": [ 0, 2]
    },
    "Decimal": {
      "to": "TapNumber",
      "precision": [ 1, 16],
      "value": [0.0,99999.0],
      "scale": [ 0, 9]
    },
    "Currency": {
      "to": "TapNumber",
      "precision": [ 1, 16],
      "value": [0.0,99999.0],
      "scale": [ 0, 9]
    },
    "Date": {
      "to": "TapString",
      "byte": 60
    },
    "DateTime": {
      "to": "TapString",
      "byte": 120
    },
    "Email": {
      "to": "TapString",
      "byte": 254
    },
    "Phone": {
      "to": "TapString",
      "byte": 255
    },
    "Picklist": {
      "to": "TapString",
      "byte": 120
    },
    "Multiselect": {
      "to": "TapString",
      "byte": 120
    },
    "URL": {
      "to": "TapString",
      "byte": 2083
    },
    "Boolean": {"to": "TapBoolean"},
    "StringNormal": {
      "to" : "TapString",
      "byte" : 255
    },
    "StringMinor": {
      "to" : "TapString",
      "byte" : 64
    },
    "StringStatus": {
      "to" : "TapString",
      "byte" : 32
    },
    "StringBit": {
      "to" : "TapString",
      "byte" : 5
    },
    "Integer": {
      "to": "TapNumber",
      "value" : [-2147483648, 2147483647]
    },
    "Map": {"to" : "TapMap"},
    "Long": {
      "to": "TapNumber",
      "value" : [-9223372036854775808, 9223372036854775807]
    },
    "WorkingHours": {
      "to": "TapNumber",
      "value": [ 0.00 , 10000.00],
      "scale": [ 0, 2]
    },
    "price": {
      "to": "TapNumber",
      "value": [ 0.00 , 10000000.00],
      "scale": [ 0, 2]
    },
    "Float": {
      "to": "TapNumber",
      "precision": [ 1, 30],
      "value": [ -3.402823466E+38, 3.402823466E+38],
      "scale": [ 0, 30],
      "fixed": false
    },
    "Array": {"to" : "TapArray"},
    "NULL": {
      "to": "TapRaw"
    }
  }
}
